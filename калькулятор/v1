#include <stdio.h>
#include <stdlib.h>

//#define sh 5
//#define be 3
//#define lo 1

typedef struct
{
    int rowN;
    int rowSize;
    
    int* arr1;
    int* arr2;
    
}pthrData;

void* threadFunc(void* thread_data)
{
    pthrData *data=(pthrData*)thread_data;
    
    for(int i =0; i <data->rowSize; i++)
    {
        dat->arr1[i]=data->arr2[i]-data->arr1[i];
        
        return 0;
    }
}

int main()
{
    int shops[5]={200,200, 250,300,150};
    int beyers[3]={1000,1000,1000};
    int loaber =200;
    
    pthread_t* threads = (pthread_t*)malloc(be * sizeof(pthread_t));//выделяем память под массив идентификаторов потоков
    pthrData* threadData=(pthrData*)malloc(be * sizeof(pthrData));// структуры с потоковыми данными 
    
    //инициализирую структуры потоков
    for(int i=0; i<3; i++)
    {
        threadData[i].rowN=i;
        threadData[i].arr1=shops;
        threadData[i].arr2=beyers;
    }
    
}
